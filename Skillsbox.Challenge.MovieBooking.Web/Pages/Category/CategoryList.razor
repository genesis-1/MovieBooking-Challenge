
@page "/category"


@inject ICategoryService _categoryService

<div class="row mt-4">
    <div class="col-6">
        <h4 class="card-title text-primary">Category List</h4>
    </div>
    <div class="col-4 offset-2">
        <a href="category/create" class="btn btn-primary form-control">Add New Category </a>
    </div>
    <div class="col-12 p-3">
        @if (Categories.Any())
        {
            <table class="table table-bordered">
                 <thead>
                    <tr>
                        <th>Name</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach(var objCat in Categories)
                    {
                        <tr>
                            <td>
                                @objCat.Name
                            </td> 
                            <td>
                            <NavLink href="@($"category/edit/{objCat.Id}")" class="btn-primary btn">Edit</NavLink>
                            @*<button class="btn btn-danger" @onclick="()=>HandleDelete(objCat.Id)">Delete</button>*@
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            if (IsLoading)
            {
                //loading gif
                <div class="text-center">
                <img src="/images/loading.gif">
                    </div>
            }
            else
            {
                //no records
                <p>No recrods found.</p>
            }
        }
    </div>
</div>


<h3>Category</h3>

@code {

    private IEnumerable<Category> Categories { get; set; } = new List<Category>();
    public bool IsLoading { get; set; }
    private int DeleteCategoryId { get; set; } = 0;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadCategories();
        }
    }

        private async Task LoadCategories()
    {
        IsLoading=true;
        StateHasChanged();
        Categories = await _categoryService.GetAll();
        IsLoading=false;
        StateHasChanged();
    }

}
